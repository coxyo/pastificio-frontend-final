import { NextResponse } from 'next/server';

export function middleware(request) {
  // Verifica se l'utente sta cercando di accedere a una pagina protetta
  const isLoginPage = request.nextUrl.pathname === '/login';
  const isPublicPage = request.nextUrl.pathname === '/' || isLoginPage;
  
  // Controlla se c'è un token nei cookie
  const token = request.cookies.get('token');
  
  // Se non c'è token e non è una pagina pubblica, reindirizza al login
  if (!token && !isPublicPage) {
    return NextResponse.redirect(new URL('/login', request.url));
  }
  
  // Se c'è token e l'utente è sulla pagina login, reindirizza alla dashboard
  if (token && isLoginPage) {
    return NextResponse.redirect(new URL('/dashboard', request.url));
  }
  
  return NextResponse.next();
}

// Configura su quali route applicare il middleware
export const config = {
  matcher: [
    /*
     * Match all request paths except for the ones starting with:
     * - api (API routes)
     * - _next/static (static files)
     * - _next/image (image optimization files)
     * - favicon.ico (favicon file)
     */
    '/((?!api|_next/static|_next/image|favicon.ico).*)',
  ],
};